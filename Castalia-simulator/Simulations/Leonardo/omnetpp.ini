# ****************************************************************************
# *  Copyright (c) Faculty of Engineering, University of Porto, Portugal     *
# *  All rights reserved                                                     *
# *                                                                          *
# *  Module: Mac ARounD Approach for Castalia Simulator                      *
# *  File: Basic802154Around.h                                               *
# *  Date: 2015-03-05                                                        *
# *  Version:  0.1                                                           *
# *  Author(s): Erico Leão <ericoleao@gmail.com>                             *
# ****************************************************************************/

[General]

# ============================================================================
# Always include the main Castalia.ini file
# ============================================================================
include ../Parameters/Castalia.ini


# ============================================================================
# Initialisation
# ============================================================================

## Com isso, é utilizado as mesmas sementes para simular vários configs
## por exemplo, paremeter = ${x1, x2, x3, ...}
## para cada valor do parameter é utilizado a mesma semente
## Se usar o -r XX irá usar as mesmas XX sementes para todos os configs
seed-set = ${repetition}

# ============================================================================
# Simulation Time
# ============================================================================
sim-time-limit = 100s

# ============================================================================
# Size of environment
# ============================================================================

## O raio de transmissão é aproximadamente 55 metros. Assim, todos os nós estarão no mesmo domínio de colisão
SN.field_x = 30
SN.field_y = 30


# ============================================================================
# Path Loss Map - Ideal para BAN, pois o modelo lognormal não é adequado
# ============================================================================
#SN.wirelessChannel.pathLossMapFile = "../Parameters/WirelessChannel/BANmodels/pathLossMap.txt"

# ============================================================================
# Modelo de interferência
# ============================================================================
#SN.wirelessChannel.temporalModelParametersFile = "../Parameters/WirelessChannel/BANmodels/TemporalModel.txt"
SN.wirelessChannel.temporalModelParametersFile = ""

## Removing variability from wireless channel
## transmissores a uma certa distância pega a mesma força de sinal
SN.wirelessChannel.sigma = 0
## links perfeitamente bidirecionais
SN.wirelessChannel.bidirectionalSigma = 0
## Módulo de rádio ideal: modelo de disco para o raio
SN.node[*].Communication.Radio.mode = "IDEAL"
## Controlar o raio do disco
#SN.wirelessChannel.PLd0 = (TxPowerUsed_dBm – max(receiverSensitivity, noisefloor+5dBm) ) – 10*pathLossExponent*log(50)
## Para raio de 100 metros, por exemplo, PLd0 = TX + 95 - 48
#SN.wirelessChannel.PLd0 = 52  ## Raio de aproximadamente 60 metros

# ============================================================================
# Rádio
# ============================================================================
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"
SN.node[*].Communication.Radio.symbolsForRSSI = 16
SN.node[*].Communication.Radio.TxOutputPower = "-1dBm"
## 0 (No interference); 1 (Simple interference - DEFAULT); 2 (Additive interefence)
#SN.node[*].Communication.Radio.collisionModel = 2

# ============================================================================
# Resource Manager
# ============================================================================

SN.node[*].ResourceManager.baselineNodePower = 0
SN.node[*].ResourceManager.sigmaCPUClockDrift = 0 #disconsider the node clock drift

# ============================================================================
# Application Layer
# ============================================================================

SN.node[*].ApplicationName = "ThroughputTest"
SN.node[*].Application.startupDelay = 1  	#wait for 1sec before starting sending packets
SN.node[0].Application.latencyHistogramMax = 600
SN.node[0].Application.latencyHistogramBuckets = 30

## Aqui especifica quem irá gerar pacotes. No caso, nenhum node irá gerar pacotes
#SN.node[1..100].Application.packet_rate = 5

# ============================================================================
# T-KiBaM modifications:
# ============================================================================
SN.node[*].ResourceManager.kibamModel = false
SN.node[0].ResourceManager.initialEnergy = 1000000  # CH with "infinite" energy.
SN.node[1..].ResourceManager.initialEnergy = 2430   # Definido pelo Leonardo (J).
#SN.node[1..].ResourceManager.initialEnergy = 50   # The initial energy (in J).

# SN.node[*].ResourceManager.periodicEnergyCalculationInterval = 3000  # Maximum Interval of Energy Calculation (in milliseconds).

SN.node[*].ResourceManager.nV = 2.4	            # 2x Panasonic HHR-4MRT Nominal Voltage.
SN.node[*].ResourceManager.c = 0.564180
SN.node[*].ResourceManager.T = 25                   # The simulated temperature (in Celsius degree). Agora será a temperatura inicial
SN.node[*].ResourceManager.A = 0.963968672200049    # The activation energy (in s^-1).
SN.node[*].ResourceManager.Ea = 1.194932474687872   # The activation energy (in KJ/mol).
SN.node[*].ResourceManager.R = 0.008314             # The universal gas constant (in KJ/mol.K).



# ============================================================================
# Coleta de traces
# ============================================================================
#SN.node[*].Communication.Radio.collectTraceInfo = true
SN.node[*].Communication.MAC.collectTraceInfo = true
#SN.node[*].Routing.collectTraceInfo = true
SN.node[*].Application.collectTraceInfo = true
SN.node[*].ResourceManager.collectTraceInfo = true
#SN.node[*].MobilityManager.collectTraceInfo = true
#SN.node[*].Communication.MAC.printStateTransitions = true

# ============================================================================
# ============================================================================


[Config Sim]

## PAN + 10 sensing nodes. Se quiseres mais nodes, alterar as quantidades
SN.numNodes = 11
SN.deployment = "[0]->center;[1..10]->uniform"

## Quantidade de nodes para associação
SN.node[0].Communication.MAC.maxChild = 4   ## Aqui define a quantidade de nós aceito para associação

SN.node[*].Communication.MAC.low_dc = 1000.0

## Taxa de geração de pacotes
SN.node[1..].Application.packet_rate = 2.017

## Beacon e Superframe para os nodos
SN.node[*].Communication.MAC.frameOrder = 3
SN.node[*].Communication.MAC.beaconOrder = 6

## Definindo periodo de atualização de temperatura do kibam
#SN.node[1].Application.kibamPeriod = 10    # Padrão 3600s = 1h

## Energy
#SN.node[0].ResourceManager.initialEnergy = 18720 #default para duas pilhas AA
#SN.node[1..10].ResourceManager.initialEnergy = 6480 #Bateria de 750 mAh

## Parâmetros MAC a serem trabalhados individualmente
#SN.node[*].Communication.MAC.macMinBE = 8
#SN.node[*].Communication.MAC.macMaxBE = 8
#SN.node[*].Communication.MAC.macMaxCSMABackoffs = 4
#SN.node[*].Communication.MAC.macMaxFrameRetries = 3

## Para modificar os parâmetros e executar tudo de uma vez, usar abaixo
#SN.node[*].Communication.MAC.macMinBE = 3   ## 3 até macmaxBE (default)
#SN.node[*].Communication.MAC.macMaxBE = ${macMaxBE=3,4,5,6,7,8}   ## 3 a 8 (default)
#SN.node[*].Communication.MAC.macMaxCSMABackoffs = ${macMaxCSMABackoffs=0,1,2,3,4,5}  ## 0 a 5 (default)
#SN.node[*].Communication.MAC.macMaxFrameRetries = ${macMaxFrameRetries=0,1,2,3,4,5,6,7} ## 0 a 7 (default)

## Configurando o MAC a ser utilizado
SN.node[*].Communication.MACProtocolName = "Basic802154"
SN.node[0].Communication.MAC.isFFD = true
SN.node[0].Communication.MAC.isPANCoordinator = true

## Ajustando os parâmetros do rádio
SN.node[*].Communication.MAC.phyDataRate = 250       ##como definido no CC2420: 250
SN.node[*].Communication.MAC.phyBitsPerSymbol = 4    ## como definindo no CC2420: 4
#SN.node[*].Communication.MAC.phyDelaySleep2Tx = 0.05  ##Valores do rádio CC2420 in ms. Default: 0.2
#SN.node[*].Communication.MAC.phyDelayRx2Tx = 0.01	 ##Valores do rádio CC2420 in ms. Default: 0.02
#SN.node[*].Communication.MAC.phyDelayForValidCS = 0.128 ##Default: 0.128
